package client;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import server.User;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.rmi.RemoteException;



class CGUI extends JFrame
  {

    private JFrame mainW;
    private JPanel firstP;
    private JButton signin;
    private JButton signup;
    private JPanel loginP;
    private JTextField nickin;
    private JPasswordField passin;
    private JLabel nickupLab;
    private JLabel passLab;
    private JButton go;
    private JButton back1;
    private JLabel nickLab;
    private JPanel signupP;
    private JButton back2;
    private JPasswordField passup;
    private JButton goup;
    private JPanel SignupP;
    private JTextField nickup;
    private JLabel passupLab;
    private JTextField surnameup;
    private JLabel nameupLab;
    private JLabel surnameupLab;
    private JTextField nameup;

    public CGUI( String title ) throws HeadlessException
      {
        mainW = new JFrame( title );
        mainW.setBackground( Color.BLACK );
        mainW.setSize( 700, 700 );
        mainW.setMaximumSize( new Dimension( 1080, 1080 ) );
        mainW.add( firstP );
        mainW.setDefaultCloseOperation( EXIT_ON_CLOSE );
        mainW.setLocationRelativeTo( null );
        mainW.setVisible( true );

        // mouse listener
        MyActionListener.setSignin( signin, mainW, firstP, loginP );
        MyActionListener.setSignup( signup, mainW, firstP, signupP );
        MyActionListener.setBack1( back1, loginP, mainW, firstP );
        MyActionListener.setBack2( back2, signupP, mainW, firstP );
        MyActionListener.setGoReg( goup, nickup, passup, nameup, surnameup );
        MyActionListener.setGoLogin( go, nickin, passin );
      }

    {
      // GUI initializer generated by IntelliJ IDEA GUI Designer
      // >>> IMPORTANT!! <<<
      // DO NOT EDIT OR ADD ANY CODE HERE!
      $$$setupUI$$$( );
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$( )
      {
        final JPanel panel1 = new JPanel( );
        panel1.setLayout( new GridLayoutManager( 3, 3, new Insets( 0, 0, 0, 0 ), -1, -1 ) );
        Font panel1Font = this.$$$getFont$$$( null, -1, -1, panel1.getFont( ) );
        if( panel1Font != null )
          {
            panel1.setFont( panel1Font );
          }
        panel1.setForeground( new Color( -1 ) );
        panel1.setMaximumSize( new Dimension( 200000, 200000 ) );
        panel1.setMinimumSize( new Dimension( -1, -1 ) );
        panel1.setPreferredSize( new Dimension( -1, -1 ) );
        panel1.putClientProperty( "html.disable", Boolean.FALSE );
        loginP = new JPanel( );
        loginP.setLayout( new GridLayoutManager( 6, 1, new Insets( 0, 0, 0, 0 ), -1, -1 ) );
        loginP.setBackground( new Color( -16777190 ) );
        loginP.setForeground( new Color( -1 ) );
        panel1.add( loginP, new GridConstraints( 1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, new Dimension( 20000, 20000 ), 0, false ) );
        loginP.setBorder( BorderFactory.createTitledBorder( BorderFactory.createEmptyBorder( 50, 10, 50, 10 ), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null ) );
        nickin = new JTextField( );
        Font nickinFont = this.$$$getFont$$$( "Courier New", -1, 16, nickin.getFont( ) );
        if( nickinFont != null )
          {
            nickin.setFont( nickinFont );
          }
        nickin.setForeground( new Color( -16777216 ) );
        nickin.setName( "Nickname" );
        nickin.setToolTipText( "Inser your nickname" );
        loginP.add( nickin, new GridConstraints( 2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension( 150, 50 ), null, 0, false ) );
        passin = new JPasswordField( );
        Font passinFont = this.$$$getFont$$$( "Courier New", -1, 16, passin.getFont( ) );
        if( passinFont != null )
          {
            passin.setFont( passinFont );
          }
        passin.setToolTipText( "Insert your password" );
        loginP.add( passin, new GridConstraints( 4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension( 150, 50 ), null, 0, false ) );
        nickLab = new JLabel( );
        nickLab.setAlignmentY( 0.0f );
        Font nickLabFont = this.$$$getFont$$$( "Courier New", -1, 14, nickLab.getFont( ) );
        if( nickLabFont != null )
          {
            nickLab.setFont( nickLabFont );
          }
        nickLab.setForeground( new Color( -1 ) );
        nickLab.setHorizontalTextPosition( 11 );
        nickLab.setText( "Nickname" );
        loginP.add( nickLab, new GridConstraints( 1, 0, 1, 1, GridConstraints.ANCHOR_SOUTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false ) );
        passLab = new JLabel( );
        Font passLabFont = this.$$$getFont$$$( "Courier New", -1, 14, passLab.getFont( ) );
        if( passLabFont != null )
          {
            passLab.setFont( passLabFont );
          }
        passLab.setForeground( new Color( -1 ) );
        passLab.setHorizontalAlignment( 10 );
        passLab.setHorizontalTextPosition( 11 );
        passLab.setText( "Password" );
        loginP.add( passLab, new GridConstraints( 3, 0, 1, 1, GridConstraints.ANCHOR_SOUTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false ) );
        go = new JButton( );
        go.setBackground( new Color( -6400 ) );
        go.setBorderPainted( true );
        Font goFont = this.$$$getFont$$$( "Courier New", -1, 20, go.getFont( ) );
        if( goFont != null )
          {
            go.setFont( goFont );
          }
        go.setForeground( new Color( -16777216 ) );
        go.setLabel( "Go" );
        go.setRequestFocusEnabled( true );
        go.setRolloverEnabled( false );
        go.setText( "Go" );
        loginP.add( go, new GridConstraints( 5, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension( -1, 80 ), null, null, 0, false ) );
        back1 = new JButton( );
        back1.setActionCommand( "Back" );
        back1.setBackground( new Color( -58368 ) );
        back1.setEnabled( true );
        Font back1Font = this.$$$getFont$$$( "Courier New", -1, 14, back1.getFont( ) );
        if( back1Font != null )
          {
            back1.setFont( back1Font );
          }
        back1.setForeground( new Color( -1 ) );
        back1.setLabel( "BACK" );
        back1.setText( "BACK" );
        loginP.add( back1, new GridConstraints( 0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension( 80, 40 ), null, new Dimension( 80, -1 ), 0, false ) );
        firstP = new JPanel( );
        firstP.setLayout( new GridLayoutManager( 2, 1, new Insets( 0, 0, 0, 0 ), -1, -1 ) );
        firstP.setBackground( new Color( -16777190 ) );
        firstP.setMinimumSize( new Dimension( 500, 500 ) );
        panel1.add( firstP, new GridConstraints( 0, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, new Dimension( 200000, 200000 ), 0, false ) );
        signin = new JButton( );
        signin.setAlignmentY( 0.0f );
        signin.setBackground( new Color( -6400 ) );
        Font signinFont = this.$$$getFont$$$( "Courier New", -1, 18, signin.getFont( ) );
        if( signinFont != null )
          {
            signin.setFont( signinFont );
          }
        signin.setForeground( new Color( -16777216 ) );
        signin.setMargin( new Insets( 0, 0, 0, 0 ) );
        signin.setText( "SIGN-IN" );
        firstP.add( signin, new GridConstraints( 0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension( 300, 300 ), null, null, 0, false ) );
        signup = new JButton( );
        signup.setBackground( new Color( -13913600 ) );
        Font signupFont = this.$$$getFont$$$( "Courier New", -1, 18, signup.getFont( ) );
        if( signupFont != null )
          {
            signup.setFont( signupFont );
          }
        signup.setForeground( new Color( -16777216 ) );
        signup.setText( "SIGN-UP" );
        firstP.add( signup, new GridConstraints( 1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension( 300, 300 ), null, null, 0, false ) );
        signupP = new JPanel( );
        signupP.setLayout( new GridLayoutManager( 11, 1, new Insets( 0, 0, 0, 0 ), -1, -1 ) );
        signupP.setBackground( new Color( -16777190 ) );
        panel1.add( signupP, new GridConstraints( 2, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false ) );
        back2 = new JButton( );
        back2.setActionCommand( "Back" );
        back2.setBackground( new Color( -58368 ) );
        Font back2Font = this.$$$getFont$$$( "Courier New", -1, 14, back2.getFont( ) );
        if( back2Font != null )
          {
            back2.setFont( back2Font );
          }
        back2.setForeground( new Color( -1 ) );
        back2.setLabel( "BACK" );
        back2.setText( "BACK" );
        back2.setVisible( true );
        signupP.add( back2, new GridConstraints( 0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension( 80, 40 ), null, new Dimension( 80, -1 ), 0, false ) );
        nickupLab = new JLabel( );
        nickupLab.setAlignmentX( 0.5f );
        nickupLab.setAutoscrolls( false );
        nickupLab.setBackground( new Color( -16316147 ) );
        Font nickupLabFont = this.$$$getFont$$$( "Courier New", -1, 16, nickupLab.getFont( ) );
        if( nickupLabFont != null )
          {
            nickupLab.setFont( nickupLabFont );
          }
        nickupLab.setForeground( new Color( -1 ) );
        nickupLab.setText( "Nickname" );
        signupP.add( nickupLab, new GridConstraints( 1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false ) );
        nickup = new JTextField( );
        signupP.add( nickup, new GridConstraints( 2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension( 150, 50 ), null, 0, false ) );
        passupLab = new JLabel( );
        Font passupLabFont = this.$$$getFont$$$( "Courier New", -1, 14, passupLab.getFont( ) );
        if( passupLabFont != null )
          {
            passupLab.setFont( passupLabFont );
          }
        passupLab.setForeground( new Color( -1 ) );
        passupLab.setRequestFocusEnabled( true );
        passupLab.setText( "Password" );
        signupP.add( passupLab, new GridConstraints( 3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false ) );
        passup = new JPasswordField( );
        Font passupFont = this.$$$getFont$$$( "Courier New", -1, 14, passup.getFont( ) );
        if( passupFont != null )
          {
            passup.setFont( passupFont );
          }
        passup.setForeground( new Color( -16316147 ) );
        signupP.add( passup, new GridConstraints( 4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension( 150, 50 ), null, 0, false ) );
        nameupLab = new JLabel( );
        Font nameupLabFont = this.$$$getFont$$$( "Courier New", -1, 16, nameupLab.getFont( ) );
        if( nameupLabFont != null )
          {
            nameupLab.setFont( nameupLabFont );
          }
        nameupLab.setForeground( new Color( -1 ) );
        nameupLab.setText( "Name" );
        signupP.add( nameupLab, new GridConstraints( 5, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false ) );
        surnameupLab = new JLabel( );
        Font surnameupLabFont = this.$$$getFont$$$( "Courier New", -1, 16, surnameupLab.getFont( ) );
        if( surnameupLabFont != null )
          {
            surnameupLab.setFont( surnameupLabFont );
          }
        surnameupLab.setForeground( new Color( -1 ) );
        surnameupLab.setText( "Surname" );
        signupP.add( surnameupLab, new GridConstraints( 7, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false ) );
        surnameup = new JTextField( );
        Font surnameupFont = this.$$$getFont$$$( "Courier New", -1, 14, surnameup.getFont( ) );
        if( surnameupFont != null )
          {
            surnameup.setFont( surnameupFont );
          }
        surnameup.setForeground( new Color( -16316147 ) );
        signupP.add( surnameup, new GridConstraints( 8, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension( 150, 50 ), null, 0, false ) );
        goup = new JButton( );
        goup.setBackground( new Color( -13913600 ) );
        Font goupFont = this.$$$getFont$$$( "Courier New", -1, 14, goup.getFont( ) );
        if( goupFont != null )
          {
            goup.setFont( goupFont );
          }
        goup.setForeground( new Color( -16316147 ) );
        goup.setRolloverEnabled( false );
        goup.setText( "Go" );
        signupP.add( goup, new GridConstraints( 9, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension( 80, 40 ), new Dimension( -1, 80 ), new Dimension( -1, 80 ), 0, false ) );
        nameup = new JTextField( );
        Font nameupFont = this.$$$getFont$$$( "Courier New", -1, 14, nameup.getFont( ) );
        if( nameupFont != null )
          {
            nameup.setFont( nameupFont );
          }
        nameup.setForeground( new Color( -16316147 ) );
        signupP.add( nameup, new GridConstraints( 6, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension( 150, 50 ), null, 0, false ) );
        nickLab.setLabelFor( nickin );
        nickupLab.setLabelFor( nickup );
        passupLab.setLabelFor( passup );
      }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$( String fontName, int style, int size, Font currentFont )
      {
        if( currentFont == null )
          {
            return null;
          }
        String resultName;
        if( fontName == null )
          {
            resultName = currentFont.getName( );
          }
        else
          {
            Font testFont = new Font( fontName, Font.PLAIN, 10 );
            if( testFont.canDisplay( 'a' ) && testFont.canDisplay( '1' ) )
              {
                resultName = fontName;
              }
            else
              {
                resultName = currentFont.getName( );
              }
          }
        return new Font( resultName, style >= 0 ? style : currentFont.getStyle( ), size >= 0 ? size : currentFont.getSize( ) );
      }

  }